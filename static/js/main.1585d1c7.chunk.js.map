{"version":3,"sources":["pages/HomePage.js","pages/MainAppNavigationItems.js","pages/MainAppNavigationItems/NavigationItems.js","pages/MainAppNavigationContent/ChatContainerElements.js","pages/MainAppNavigationContent/ChatContainer.js","pages/MainAppNavigationContent/UserCountButton.js","pages/MainAppNavigationContent/UserCountContainer.js","pages/MainApp.js","App.js","index.js"],"names":["HomePage","className","to","pathname","MainAppNavigationItems","divName","icon","NavigationItems","data","OtherMessages","message","messageContent","messageDate","messageFrom","UserMessages","ChatContainerElements","changingUsername","allMessages","setAllMessages","username","slice","reverse","map","index","onSubmit","e","preventDefault","console","log","startOf","fromNow","target","elements","textMessages","value","cols","rows","name","type","id","ChatContainer","allCurrentUser","UserCountButton","buttonText","buttonOnClick","onClick","UserCountContainer","changingCurrentUser","currentUserCount","MainApp","useState","navigationContainerActive","setNavigationContainerActive","path","render","props","App","localStorage","getItem","JSON","parse","messagesContent","setCurrentUserCount","setAllCurrentUser","sizeDifference","length","userCount","useEffect","i","newArray","pop","handleSetAllMessages","setItem","stringify","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1585d1c7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {AiOutlineMessage} from 'react-icons/all'\r\nimport \"./HomePage.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"homePageContainer\">\r\n            <h1>Messaging App <AiOutlineMessage className=\"icon\" /></h1>\r\n            <Link to={{\r\n                pathname : '/MainApp',\r\n            }} className=\"getStartedButton\">\r\n                GET STARTED\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import {FaUsers,BsChatSquareDots} from 'react-icons/all'\r\nconst MainAppNavigationItems = [\r\n    {\r\n        divName : 'UserContainer',\r\n        to : \"/UserCount\",\r\n        icon : <FaUsers  className=\"icon\"/>,\r\n        \r\n    },{\r\n        divName : 'ChatContainer',\r\n        to : \"/ChatContainer\",\r\n        icon : <BsChatSquareDots className=\"icon\"/>\r\n    }\r\n]\r\n\r\nexport default MainAppNavigationItems\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./NavigationItems.css\"\r\n\r\nconst NavigationItems = ({ data }) => {\r\n  return (\r\n    <Link to={data.to}>\r\n      <li>\r\n        <p className=\"ItemName\"> {data.divName} </p>\r\n        {\r\n            data.icon\r\n        }\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport { IoIosSend } from \"react-icons/all\";\r\nimport Moment from \"moment\";\r\nconst ChatContainerElements = ({\r\n  data,\r\n  changingUsername,\r\n  allMessages,\r\n  setAllMessages,\r\n}) => {\r\n  return (\r\n    <div className=\"userChatContainer\">\r\n      <h2>{data.username}</h2>\r\n\r\n      <div className=\"scrollDiv\">\r\n        <div className=\"messageContainer\">\r\n          {allMessages\r\n            .slice()\r\n            .reverse()\r\n            .map((message, index) => {\r\n              return message.messageFrom === data.username ? (\r\n                <UserMessages key={index} message={message} />\r\n              ) : (\r\n                <OtherMessages key={index} message={message} />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"inputContainer\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n\r\n            console.log(<Moment startOf={\"day\"} fromNow />);\r\n            setAllMessages({\r\n              messageFrom: data.username,\r\n              messageContent: e.target.elements.textMessages.value,\r\n              messageDate: \"\",\r\n            });\r\n          }}\r\n        >\r\n          <textarea cols=\"30\" rows=\"10\" name=\"textMessages\"></textarea>\r\n          <button type=\"submit\">\r\n            {\" \"}\r\n            <IoIosSend className=\"icon\" />{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          data.username\r\n            ? \"enterUsernameOverlay \"\r\n            : \"enterUsernameOverlay active\"\r\n        }\r\n      >\r\n        <h2>Enter Userame. </h2>\r\n\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            changingUsername(data.id, e.target.elements.username.value);\r\n          }}\r\n        >\r\n          <input type=\"text\" name=\"username\" id=\"\" />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OtherMessages = ({ message }) => {\r\n  return (\r\n    <div className=\"otherMessage message\">\r\n      <p className=\"textMessages\">{message.messageContent}</p>\r\n      <p className=\"date\">{message.messageDate}</p>\r\n      <p className=\"from\">{message.messageFrom}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserMessages = ({ message }) => {\r\n  return (\r\n    <div className=\"usersMessage message\">\r\n      <p className=\"textMessages\">{message.messageContent}</p>\r\n      <p className=\"date\">{message.messageDate}</p>\r\n      <p className=\"from\">{message.messageFrom}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainerElements;\r\n","import React from \"react\";\r\nimport \"./ChatContainer.css\";\r\nimport ChatContainerElements from './ChatContainerElements'\r\n\r\nconst ChatContainer = ({allCurrentUser,changingUsername,allMessages,setAllMessages}) => {\r\n\r\n\r\n    return (\r\n    <div className=\"chatContainer\">\r\n        {\r\n            allCurrentUser.map((data,index)=>{\r\n               return <ChatContainerElements key={index} data={data} changingUsername={changingUsername} \r\n               allMessages={allMessages} setAllMessages={setAllMessages}\r\n               />\r\n            })\r\n        }\r\n    </div>\r\n  \r\n  \r\n  )};\r\nexport default ChatContainer;\r\n","import React from \"react\";\r\nimport \"./UserCountButton.css\";\r\n\r\nconst UserCountButton = ({ buttonText, buttonOnClick }) => {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        buttonOnClick();\r\n      }}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UserCountButton;\r\n","import React from \"react\";\r\nimport UserCountButton from \"./UserCountButton\";\r\nimport \"./UserCountContainer.css\"\r\n\r\nconst UserCountContainer = ({ changingCurrentUser, currentUserCount }) => {\r\n  return (\r\n    <div className=\"containerButton\">\r\n        <h2>How many user's you want ? </h2>\r\n      <div className=\"allButtons\">\r\n        <UserCountButton\r\n          buttonText={1}\r\n          buttonOnClick={() => {\r\n            changingCurrentUser(1);\r\n          }}\r\n        />\r\n        <UserCountButton\r\n          buttonText={2}\r\n          buttonOnClick={() => {\r\n            changingCurrentUser(2);\r\n          }}\r\n        />\r\n        <UserCountButton\r\n          buttonText={3}\r\n          buttonOnClick={() => {\r\n            changingCurrentUser(3);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCountContainer;\r\n","import React, { useState } from \"react\";\r\nimport { FaBars, IoClose } from \"react-icons/all\";\r\nimport \"./MainApp.css\";\r\nimport MainAppNavigationItems from \"./MainAppNavigationItems\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport NavigationItems from \"./MainAppNavigationItems/NavigationItems\";\r\nimport ChatContainer from \"./MainAppNavigationContent/ChatContainer\";\r\nimport UserCountContainer from \"./MainAppNavigationContent/UserCountContainer\";\r\n\r\nconst MainApp = ({\r\n  changingCurrentUser,\r\n  currentUserCount,\r\n  allCurrentUser,\r\n  changingUsername,\r\n  allMessages,\r\n  setAllMessages,\r\n}) => {\r\n  const [navigationContainerActive, setNavigationContainerActive] = useState(\r\n    false\r\n  );\r\n\r\n  return (\r\n    <div className=\"mainAppContainer\">\r\n      <Router>\r\n        <nav>\r\n          <button\r\n            className=\"navigationBarButton\"\r\n            onClick={() => {\r\n              setNavigationContainerActive(!navigationContainerActive);\r\n            }}\r\n          >\r\n            <FaBars className=\"icon\" />\r\n          </button>\r\n\r\n          <div\r\n            className={\r\n              navigationContainerActive\r\n                ? \"navigationContainer active\"\r\n                : \"navigationContainer\"\r\n            }>\r\n            <button\r\n              onClick={() => {\r\n                setNavigationContainerActive(!navigationContainerActive);\r\n              }}\r\n            >\r\n              <IoClose className=\"icon\" />\r\n            </button>\r\n            <ul>\r\n              {\" \"}\r\n              {MainAppNavigationItems.map((data, index) => {\r\n                return <NavigationItems key={index} data={data} />;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <Switch>\r\n          <Route\r\n            path=\"/UserCount\"\r\n            render={(props) => {\r\n              \r\n\r\n              return (\r\n                <UserCountContainer\r\n                  {...props}\r\n                  changingCurrentUser={changingCurrentUser}\r\n                  currentUserCount={currentUserCount}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route \r\n            path=\"/ChatContainer\"\r\n            render={(props) => {\r\n              \r\n              return (\r\n                <ChatContainer\r\n                  {...props}\r\n                  allCurrentUser={allCurrentUser}\r\n                  changingUsername={changingUsername}\r\n                  allMessages={allMessages}\r\n                  setAllMessages={setAllMessages}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport MainApp from \"./pages/MainApp\";\nconst App = () => {\n  //const [numberOfUser, setNumberOfUser] = useState();\n  const [allMessages, setAllMessages] = useState(\n    localStorage.getItem(\"allMessages\")\n      ? JSON.parse(localStorage.getItem(\"allMessages\"))\n      : [\n          {\n            messageFrom: \"Alfred\",\n            messagesContent: \"Sample Messages\",\n            messageDate: \"\",\n          },\n        ]\n  );\n\n  const [currentUserCount, setCurrentUserCount] = useState(0);\n  const [allCurrentUser, setAllCurrentUser] = useState([]);\n\n  const sizeDifference = currentUserCount - allCurrentUser.length;\n  const changingCurrentUser = (userCount) => {\n    setCurrentUserCount(userCount);\n  };\n\n  const changingUsername = (id, username) => {\n    setAllCurrentUser(\n      allCurrentUser.map((data) => {\n        data.id === id\n          ? (data.username = username)\n          : (data.username = data.username);\n        return data;\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (sizeDifference > 0) {\n      for (let i = 0; i < sizeDifference; i++) {\n        setAllCurrentUser([\n          ...allCurrentUser,\n          {\n            id:\n              allCurrentUser.length > 0\n                ? allCurrentUser[allCurrentUser.length - 1].id + 1\n                : 1,\n            username: \"\",\n          },\n        ]);\n      }\n    }\n\n    if (sizeDifference < 0) {\n      for (let i = sizeDifference; i <= 0; i++) {\n        let newArray = [...allCurrentUser];\n        newArray.pop();\n        setAllCurrentUser(newArray);\n      }\n    }\n  }, [sizeDifference]);\n\n  const handleSetAllMessages = (message) => {\n    setAllMessages([...allMessages, message]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"allMessages\", JSON.stringify(allMessages));\n    console.log(\"went through\");\n  }, [allMessages]);\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route\n            path=\"/MainApp\"\n            render={(props) => (\n              <MainApp\n                {...props}\n                changingCurrentUser={changingCurrentUser}\n                currentUserCount={currentUserCount}\n                allCurrentUser={allCurrentUser}\n                changingUsername={changingUsername}\n                allMessages={allMessages}\n                setAllMessages={handleSetAllMessages}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            render={(props) => {\n              return <HomePage {...props} />;\n            }}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}